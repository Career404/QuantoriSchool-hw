@import url('https://fonts.googleapis.com/css2?family=Nunito:wght@400;500;600;800&display=swap');
* {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
	font-family: 'Nunito', sans-serif;
	transition: 150ms;
}
html {
	height: 100%;
	--health-accent: #0053cf;
	--work-accent: #9747ff;
	--home-accent: #639462;
	--other-accent: #ea8c00;
}
body {
	height: auto;
	min-height: 100vh;
	font-family: 'Open Sans', sans-serif;
}
::-webkit-scrollbar {
	width: 10px;
}
::-webkit-scrollbar-thumb {
	background: #9e9e9eb6;
}
::-webkit-scrollbar-thumb:hover {
	background: #aaa;
}
/*
Start tabs
*/
.tab-wrapper {
	position: absolute;
	display: flex;
	flex-flow: row nowrap;
	z-index: 999;
}
.tab {
	cursor: pointer;
	height: 1rem;
	width: 8rem;
	padding: 0 20px;
	margin: 0px 2px;
	border-radius: 3px;
	opacity: 0.2;
	background: #000;
	box-shadow: 0 0.5rem 0.8rem #ffffff80;
	text-align: center;
	color: rgb(255, 255, 255);
}
.tab:hover {
	height: 2rem;
	line-height: 2rem;
}
.radioTab {
	display: none;
}
.panels-wrapper {
	padding-top: 20px;
}
.panel {
	position: absolute;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	display: none;
	animation: fadein 0.8s;
}
@keyframes fadein {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}
#func:checked ~ .panels-wrapper #func-panel,
#oop:checked ~ .panels-wrapper #oop-panel {
	display: block;
}
#func:checked ~ .tab-wrapper #func-tab,
#oop:checked ~ .tab-wrapper #oop-tab {
	background: black;
	color: white;
	border-bottom: 3px solid #0053cf;
	opacity: 0.9;
}
/*
End tabs
*/
.main {
	padding: 44px 0;
	width: 80%;
	min-width: 250px;
	margin: 0 auto;
}

.button {
	display: inline-block;
	background-color: rgba(60, 134, 244, 0.15);
	border-radius: 12px;
	border: none;
	padding: 1rem 0;
	color: #0053cf;
	font-size: 1rem;
	font-weight: 800;
	text-align: center;
	-webkit-appearance: none;
	-moz-appearance: none;
}
.button:disabled {
	background-color: #d3d3d3;
	color: white;
}
.button:hover {
	background-color: rgba(60, 134, 244, 0.35);
}
.button:active {
	background-color: #3c86f4;
	color: white;
}
.icon-interactive {
	border: none;
	cursor: pointer;
}
.icon-interactive:hover {
	scale: 1.1;
}
.icon-interactive:active {
	scale: 1.2;
}
.main input[type='checkbox'] {
	accent-color: #0053cf;
}
.main h1 {
	margin-bottom: 2px;
	font-size: 2rem;
}
.main h2 {
	margin: 2rem 0 1rem;
}
.main ul {
	margin-bottom: 1rem;
}
.search-bar {
	height: 52px;
	margin: 42px 0;
	display: flex;
	flex-flow: row nowrap;
	justify-content: space-between;
	gap: min(20px, 2vw);
}
.search-bar input[type='text'] {
	height: 100%;
	flex: 1 1 85%;
	border-radius: 12px;
	border: 1px solid #d2d2d2;
	background-color: #f5f5f5;
	padding-left: 22px;
	color: black;
	font-size: 1rem;
	font-weight: 500;
}
.search-bar button {
	flex: 1 1 15%;
	min-width: 90px;
	border-radius: 12px;
}
.list-item {
	max-width: 500px;
	padding: 10px;
	display: flex;
	flex-flow: row nowrap;
	justify-content: space-between;
	align-items: center;
}
.label {
	flex-grow: 1;
	cursor: pointer;
	display: flex;
	flex-flow: row nowrap;
	align-items: center;
}
.completed-label:hover {
	text-shadow: 0 0 30px #0053cf;
}
.completed-label li {
	list-style: none;
	padding-left: 20px;
}
.list-item input[type='checkbox'] {
	cursor: pointer;
	position: absolute;
	opacity: 0;
}
.list-item label::before {
	content: '';
	position: relative;
	display: inline-block;
	width: 21px;
	height: 21px;
	background: transparent url(./assets/CheckboxUnchecked.svg) center no-repeat;
	background-size: contain;
}
.list-item:has(input[type='checkbox']:focus-visible) label::before
/* ,
.list-item label:hover::before  */ {
	content: '';
	position: relative;
	display: inline-block;
	width: 21px;
	height: 21px;
	background: transparent url(./assets/CheckboxUnchecked.svg) center no-repeat;
	background-size: contain;
	outline: 2px solid black;
}
.list-item:has(input[type='checkbox']:active) label::before {
	content: '';
	position: relative;
	display: inline-block;
	width: 21px;
	height: 21px;
	background: transparent url(./assets/CheckboxChecked.svg) center no-repeat;
	background-size: contain;
}
.list-item:has(input[type='checkbox']:checked) label::before {
	content: '';
	position: relative;
	display: inline-block;
	width: 21px;
	height: 21px;
	background: transparent url(./assets/CheckboxDisabled.svg) center no-repeat;
	background-size: contain;
}
.item-info {
	display: flex;
	flex-flow: column nowrap;
	gap: 9px;
	font-size: 18px;
}
.li-more {
	display: flex;
	flex-flow: row nowrap;
	align-items: center;
	gap: 10px;
}
.li-date {
	font-weight: 500;
	font-size: 12px;
	color: #838383;
}
.li-tag {
	width: fit-content;
	padding: 2px 8px;
	border: none;
	border-radius: 6px;
	background: #ffecc7;
	font-size: 12px;
	color: var(--other-accent);
}
.li-tag-home {
	background-color: #e2f7e2;
	color: var(--home-accent);
}
.li-tag-work {
	background: #e8d7ff;
	color: var(--work-accent);
}
.li-tag-health {
	background: rgba(60, 134, 244, 0.31);
	color: var(--health-accent);
}
.list-completed * {
	color: #838383;
}
.list-completed .li-tag {
	background-color: #f5f5f5;
}
.delete-icon {
	height: 1rem;
	width: 1rem;
	background: transparent url(./assets/Delete.svg);
}
.delete-icon:hover {
	background: transparent url(./assets/DeleteHover.svg);
}
.delete-icon:active {
	background: transparent url(./assets/DeleteActive.svg);
}
.completed-list .list-item {
	color: #838383;
}
.completed-list .li-tag {
	background-color: #f5f5f5;
	color: #838383;
}
body:has(.fullscreen) {
	overflow: hidden;
}
.fullscreen {
	position: fixed;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	display: flex;
	align-items: center;
	justify-content: center;
	background-color: rgba(0, 0, 0, 0.495);
}
.modal {
	height: max(50%, 371px);
	width: max(50%, 524px);
	padding: 22px 32px;
	display: flex;
	flex-flow: column nowrap;
	justify-content: space-between;
	align-items: center;
	border-radius: 24px;
	background-color: white;
}
.modal h3 {
	margin-bottom: 38px;
	font-size: 24px;
}
.modal .buttons-container {
	width: 100%;
	display: flex;
	flex-flow: row nowrap;
	justify-content: stretch;
	align-items: center;
	gap: 10px;
}
.modal .buttons-container > * {
	flex: 1 1 50%;
}
.modal .buttons-container .cancel-button {
	background-color: transparent;
}
.modal .buttons-container .cancel-button:hover {
	outline: 1px solid rgba(255, 60, 60);
}
.modal .buttons-container .cancel-button:active {
	background-color: rgba(255, 60, 60, 0.9);
}

.taskCreator {
	height: 100%;
	width: 100%;
	display: flex;
	flex-flow: column nowrap;
	justify-content: start;
	gap: 18px;
}
.newTaskTitle {
	min-height: 52px;
	padding: 1rem 21px;
	border-radius: 12px;
	border: 1px solid #d2d2d2;
	background-color: #f5f5f5;
}
.newTask-more {
	display: flex;
	justify-content: space-between;
	align-items: center;
}
.tagSelector {
	display: flex;
	gap: 12px;
}
.newTaskTag:has(.radioTab:checked) {
	outline: 2px solid var(--other-accent);
}
.li-tag-health.newTaskTag:has(.radioTab:checked) {
	outline: 2px solid var(--health-accent);
}
.li-tag-work.newTaskTag:has(.radioTab:checked) {
	outline: 2px solid var(--work-accent);
}
.li-tag-home.newTaskTag:has(.radioTab:checked) {
	outline: 2px solid var(--home-accent);
}
.newTaskTag:focus {
	box-shadow: 0 0 3px 2px black;
}
.datePicker {
	position: relative;
	width: max(20%, 117px);
	height: 40px;
	display: flex;
	text-align: center;
	border: 2px solid rgba(60, 134, 244, 0.6);
	border-radius: 12px;
	font-weight: 500;
}
.datePicker::-webkit-calendar-picker-indicator {
	position: absolute;
	top: 0;
	left: 0;
	width: 20%;
	height: 100%;
	border-color: black;
	opacity: 0.1;
	/*current solution makes manual input not very comfortable (adjustable by width)*/
	/* display: none; */
	/* would remove the element as per mockup, but why have input type=date without the calendar dropdown */
	/* did not find the element used by moz browser :( */
}
